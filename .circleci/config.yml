version: 2
jobs:
  lint:
    working_directory: ~/fbc-mobile-app
    docker:
      - image: circleci/node:12.8.0
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run: yarn install
      - run: yarn lint-coverage
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - store_test_results:
          path: reports/lint
      - store_artifacts:
          path: reports/lint
  flow:
    working_directory: ~/fbc-mobile-app
    docker:
      - image: circleci/node:12.8.0
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run: yarn install
      - run: yarn add -W --dev flow-bin@^0.134.0
      - run: yarn add -W --dev flow-coverage-report
      - run: yarn add -W --dev @kironeducation/flow-junit-transformer
      - run: yarn flow check
      - run: yarn flow-coverage
      - run: yarn --silent flow check --json --max-workers 1 | yarn --silent flow-junit-transformer > reports/flow/flow-junit.xml
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - store_test_results:
          path: reports/flow
      - store_artifacts:
          path: reports/flow
  test:
    working_directory: ~/fbc-mobile-app
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run:
          name: Install JUnit coverage reporter
          command: yarn add -W --dev jest-junit
      - run: yarn install
      - run: yarn proto
      - run:
          name: Jest Tests
          command: yarn test-coverage
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - store_test_results:
          path: ./reports/junit
      - store_artifacts:
          path: ./reports/junit
  apks:
    working_directory: ~/fbc-mobile-app
    docker:
      - image: circleci/android:api-28-node8-alpha
    resource_class: large
    environment:
      JVM_OPTS: -Xmx2g
      JAVA_OPTS: '-Xms512m -Xmx2g'
      GRADLE_OPTS: '-Xmx2g -Dorg.gradle.daemon=true -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - run:
          name: Create .env file
          command: echo APP_NAME=\'platform\' > .env.platform
      - run: yarn install
      - run: yarn proto
      - run: yarn circleci:platform
      - store_artifacts:
          path: ~/fbc-mobile-app/android/app/build/outputs/apk/platform/release
      - store_artifacts:
          path: ~/.gradle/daemon
workflows:
  version: 2
  build_and_test:
    jobs:
      - lint
      - flow
      - test
      - apks
