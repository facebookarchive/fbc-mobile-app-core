// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalActions Tests ModalActions renders correctly 1`] = `
<View>
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "flex-end",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#1877F2",
            "borderRadius": 4,
            "display": "flex",
            "flexDirection": "row",
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 10.5,
          }
        }
      >
        <Text
          style={
            Array [
              Array [
                Object {
                  "color": "#484848",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "lineHeight": 20,
                },
                null,
                Object {
                  "fontFamily": "Roboto-Bold",
                },
                Object {
                  "textAlign": "left",
                },
              ],
              Array [
                Object {
                  "display": "flex",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
                Object {
                  "color": "white",
                },
                Object {
                  "fontSize": 16,
                },
                null,
                Object {
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          ok
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ModalActions Tests ModalActions renders correctly with cancel label 1`] = `
<View>
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "flex-start",
        }
      }
    >
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "opacity": 1,
            "paddingHorizontal": 19,
            "paddingVertical": 10.5,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#484848",
                "fontSize": 16,
                "fontWeight": "500",
                "lineHeight": 20,
              },
              Object {
                "color": "#1877F2",
              },
              Object {
                "fontFamily": "Roboto-Bold",
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
        >
          cancel
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "flex-end",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#1877F2",
            "borderRadius": 4,
            "display": "flex",
            "flexDirection": "row",
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 10.5,
          }
        }
      >
        <Text
          style={
            Array [
              Array [
                Object {
                  "color": "#484848",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "lineHeight": 20,
                },
                null,
                Object {
                  "fontFamily": "Roboto-Bold",
                },
                Object {
                  "textAlign": "left",
                },
              ],
              Array [
                Object {
                  "display": "flex",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
                Object {
                  "color": "white",
                },
                Object {
                  "fontSize": 16,
                },
                null,
                Object {
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          ok
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ModalActions Tests ModalActions renders correctly with divider 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#CFD1D5",
          "height": 1,
        },
        undefined,
      ]
    }
  />
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <View
      style={
        Object {
          "alignSelf": "flex-end",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#1877F2",
            "borderRadius": 4,
            "display": "flex",
            "flexDirection": "row",
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 10.5,
          }
        }
      >
        <Text
          style={
            Array [
              Array [
                Object {
                  "color": "#484848",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "lineHeight": 20,
                },
                null,
                Object {
                  "fontFamily": "Roboto-Bold",
                },
                Object {
                  "textAlign": "left",
                },
              ],
              Array [
                Object {
                  "display": "flex",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
                Object {
                  "color": "white",
                },
                Object {
                  "fontSize": 16,
                },
                null,
                Object {
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          ok
        </Text>
      </View>
    </View>
  </View>
</View>
`;
